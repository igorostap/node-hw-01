{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-phonebook/src/components/Form.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Form extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: name,\n          onChange: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true,\n          value: number,\n          onChange: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  valuu: PropTypes.string,\n  submit: PropTypes.func\n};","map":{"version":3,"names":["Component","PropTypes","Inputstyled","Form","render","submit","name","value","number","propTypes","string","isRequired","valuu","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-phonebook/src/components/Form.js"],"sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nexport default class Form extends Component {\n  \n  \n  \n  \n    render() {\n      return(\n    <form onSubmit={submit}>\n      <label>\n        Name\n        <Inputstyled\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={value}\n        />\n      </label>\n          <label>\n              Number\n        <Inputstyled\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  value={number}\n          onChange={value}\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n  }\n    \nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  valuu: PropTypes.string,\n  submit: PropTypes.func,\n};\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;EAKxCI,MAAM,GAAG;IACP,oBACF;MAAM,QAAQ,EAAEC,MAAhB;MAAA,wBACE;QAAA,gCAEE,QAAC,WAAD;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,OAAO,EAAC,wHAHV;UAIE,KAAK,EAAC,wIAJR;UAKE,QAAQ,MALV;UAME,KAAK,EAAEC,IANT;UAOE,QAAQ,EAAEC;QAPZ;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAaM;QAAA,kCAEF,QAAC,WAAD;UACE,IAAI,EAAC,KADP;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAC,wFAHV;UAIE,KAAK,EAAC,8FAJR;UAKU,QAAQ,MALlB;UAMU,KAAK,EAAEC,MANjB;UAOE,QAAQ,EAAED;QAPZ;UAAA;UAAA;UAAA;QAAA,QAFE;MAAA;QAAA;QAAA;QAAA;MAAA,QAbN,eAyBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADE;EA6BL;;AAnC2C;AAsC5CJ,IAAI,CAACM,SAAL,GAAiB;EACfH,IAAI,EAAEL,SAAS,CAACS,MAAV,CAAiBC,UADR;EAEfC,KAAK,EAAEX,SAAS,CAACS,MAFF;EAGfL,MAAM,EAAEJ,SAAS,CAACY;AAHH,CAAjB"},"metadata":{},"sourceType":"module"}