{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-04-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { InputForm } from './InputForm/InputForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactLList/ContactList';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialContacts = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport function App() {\n  _s();\n\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n}\n\n_s(App, \"GQChYT4G3P6Q959Z1pEuILLwCoc=\");\n\n_c = App;\n;\n\nconst submitHandle = evt => {\n  const phoneName = contacts.find(el => el.name.toLowerCase() === evt.name.toLowerCase());\n  if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n  evt.id = nanoid();\n  this.setState(prev => ({\n    contacts: [evt, ...prev.contacts]\n  }));\n};\n\nfilterChange = evt => {\n  evt.preventDefault();\n  this.setState({\n    filter: evt.currentTarget.value\n  });\n};\n\nonDelete = id => {\n  this.setState(prev => ({\n    contacts: prev.contacts.filter(contact => contact.id !== id)\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      submitHandle: submitHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      filter: filter,\n      filterChange: this.filterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), contacts.length ? /*#__PURE__*/_jsxDEV(ContactList, {\n      contacts: filteredContacts,\n      onDelete: this.onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No any contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n/*export class App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    filter: ''\n  }\n  componentDidMount() { \n    const contactsList = localStorage.getItem('contacts');\n    const list = JSON.parse(contactsList);\n    if (list) { this.setState({ contacts: list }); } return;\n    \n  };\n  componentDidUpdate(prevProps, prevState) { \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n  submitHandle = (evt) => {\n    const phoneName = this.state.contacts.find(el => (el.name.toLowerCase() === evt.name.toLowerCase()));\n    if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n    \n    evt.id = nanoid();\n    this.setState(prev => ({ contacts: [evt, ...prev.contacts] }))\n  }\n  filterChange = (evt) => {\n    evt.preventDefault();\n    this.setState({ filter: evt.currentTarget.value });\n  }\n  onDelete = (id) => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(\n      contact => contact.id !== id)\n    }))\n  }\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const filterToLowCase = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(filterToLowCase)));\n\n    return (\n      <>\n        \n          <h1>Phonebook</h1>\n          <InputForm submitHandle={this.submitHandle}/>\n        \n        \n          <h2>Contact List</h2>\n          <Filter filter={filter} filterChange={this.filterChange}/>\n          {contacts.length ?\n            <ContactList contacts={filteredContacts} onDelete={this.onDelete} /> :\n            <p>No any contacts</p>}\n        \n      </>\n    );\n  };\n}*/\n\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","InputForm","Filter","ContactList","Notiflix","nanoid","initialContacts","id","name","number","App","contacts","setContacts","filter","setFilter","window","localStorage","setItem","JSON","stringify","submitHandle","evt","phoneName","find","el","toLowerCase","Notify","failure","setState","prev","filterChange","preventDefault","currentTarget","value","onDelete","contact","length","filteredContacts"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-04-phonebook/src/components/App.jsx"],"sourcesContent":["import {useState,useEffect} from 'react';\nimport { InputForm } from './InputForm/InputForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactLList/ContactList';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n];\nexport function App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n\n  },[contacts])\n};\nconst submitHandle = (evt) => {\n    const phoneName = contacts.find(el => (el.name.toLowerCase() === evt.name.toLowerCase()));\n    if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n    \n    evt.id = nanoid();\n    this.setState(prev => ({ contacts: [evt, ...prev.contacts] }))\n  }\n  filterChange = (evt) => {\n    evt.preventDefault();\n    this.setState({ filter: evt.currentTarget.value });\n  }\n  onDelete = (id) => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(\n      contact => contact.id !== id)\n    }))\n    return (\n      <>\n        \n          <h1>Phonebook</h1>\n          <InputForm submitHandle={submitHandle}/>\n        \n        \n          <h2>Contact List</h2>\n          <Filter filter={filter} filterChange={this.filterChange}/>\n          {contacts.length ?\n            <ContactList contacts={filteredContacts} onDelete={this.onDelete} /> :\n            <p>No any contacts</p>}\n        \n      </>\n    );\n  }\n/*export class App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    filter: ''\n  }\n  componentDidMount() { \n    const contactsList = localStorage.getItem('contacts');\n    const list = JSON.parse(contactsList);\n    if (list) { this.setState({ contacts: list }); } return;\n    \n  };\n  componentDidUpdate(prevProps, prevState) { \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n  submitHandle = (evt) => {\n    const phoneName = this.state.contacts.find(el => (el.name.toLowerCase() === evt.name.toLowerCase()));\n    if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n    \n    evt.id = nanoid();\n    this.setState(prev => ({ contacts: [evt, ...prev.contacts] }))\n  }\n  filterChange = (evt) => {\n    evt.preventDefault();\n    this.setState({ filter: evt.currentTarget.value });\n  }\n  onDelete = (id) => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(\n      contact => contact.id !== id)\n    }))\n  }\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const filterToLowCase = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(filterToLowCase)));\n\n    return (\n      <>\n        \n          <h1>Phonebook</h1>\n          <InputForm submitHandle={this.submitHandle}/>\n        \n        \n          <h2>Contact List</h2>\n          <Filter filter={filter} filterChange={this.filterChange}/>\n          {contacts.length ?\n            <ContactList contacts={filteredContacts} onDelete={this.onDelete} /> :\n            <p>No any contacts</p>}\n        \n      </>\n    );\n  };\n}*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}