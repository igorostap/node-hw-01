{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-phonebook/src/components/Form.js\";\nimport PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form(_ref) {\n  let {\n    name,\n    submit,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: tel,\n        onChange: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Form;\nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  valuu: PropTypes.string,\n  submit: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["PropTypes","Inputstyled","Form","name","submit","value","tel","propTypes","string","isRequired","valuu","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-phonebook/src/components/Form.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nexport default function Form({ name, submit, value }) {\n  return (\n    <form onSubmit={submit}>\n      <label>\n        Name\n        <Inputstyled\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={value}\n        />\n      </label>\n          <label>\n              Number\n        <Inputstyled\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  value={tel}\n          onChange={value}\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\nForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  valuu: PropTypes.string,\n  submit: PropTypes.func,\n};\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,eAAe,SAASC,IAAT,OAAuC;EAAA,IAAzB;IAAEC,IAAF;IAAQC,MAAR;IAAgBC;EAAhB,CAAyB;EACpD,oBACE;IAAM,QAAQ,EAAED,MAAhB;IAAA,wBACE;MAAA,gCAEE,QAAC,WAAD;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,MAFP;QAGE,OAAO,EAAC,wHAHV;QAIE,KAAK,EAAC,wIAJR;QAKE,QAAQ,MALV;QAME,KAAK,EAAED,IANT;QAOE,QAAQ,EAAEE;MAPZ;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaM;MAAA,kCAEF,QAAC,WAAD;QACE,IAAI,EAAC,KADP;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAC,wFAHV;QAIE,KAAK,EAAC,8FAJR;QAKU,QAAQ,MALlB;QAMU,KAAK,EAAEC,GANjB;QAOE,QAAQ,EAAED;MAPZ;QAAA;QAAA;QAAA;MAAA,QAFE;IAAA;MAAA;MAAA;MAAA;IAAA,QAbN,eAyBE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;KA9BuBH,I;AA+BxBA,IAAI,CAACK,SAAL,GAAiB;EACfJ,IAAI,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UADR;EAEfC,KAAK,EAAEV,SAAS,CAACQ,MAFF;EAGfJ,MAAM,EAAEJ,SAAS,CAACW;AAHH,CAAjB"},"metadata":{},"sourceType":"module"}