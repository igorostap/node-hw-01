{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-phonebook/src/components/Form.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nimport { Formik, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class InputForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: '',\n      number: ''\n    };\n\n    this.onSubmit = (values, action) => {\n      this.props.submitHandle(values);\n      console.log(values);\n      action.resetForm();\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name,\n        number\n      },\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true // value={ name}\n            // onChange={this.onInput}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(Inputstyled, {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true // value={ number}\n            // onChange={this.onInput}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n};","map":{"version":3,"names":["Component","PropTypes","Inputstyled","Formik","Form","InputForm","state","name","number","onSubmit","values","action","props","submitHandle","console","log","resetForm","render","propTypes","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-phonebook/src/components/Form.js"],"sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Inputstyled } from './Form.styled';\nimport { Formik, Form } from 'formik';\nexport default class InputForm extends Component {\n   state = {\n    name: '',\n    number: '',\n  };\n  \n    onSubmit = (values, action) => {\n        this.props.submitHandle(values);\n        console.log(values);\n        action.resetForm();\n    }\n  \n    render() {\n        const {name,number } = this.state;\n      return(\n    <Formik initialValues={{ name, number }}\n            onSubmit={this.onSubmit}>\n            <Form><label>Name\n                <Inputstyled\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    // value={ name}\n                    // onChange={this.onInput}\n                /></label>\n                <label>Number<Inputstyled\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    // value={ number}\n                    // onChange={this.onInput}\n                    /></label>\n                    <button type=\"submit\">Add contact</button>\n                {/* <button type=\"submit\" onClick={evt => {\n                        this.setState({ name: \"\", number: \"\" });\n                        this.props.SubmitHandle(evt, this.state);\n                } }>Add contact</button> */}\n                </Form>\n                </Formik>\n        )\n    }\n}\n    \nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n}\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;;AACA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAC9CM,KAD8C,GACtC;MACPC,IAAI,EAAE,EADC;MAEPC,MAAM,EAAE;IAFD,CADsC;;IAAA,KAM7CC,QAN6C,GAMlC,CAACC,MAAD,EAASC,MAAT,KAAoB;MAC3B,KAAKC,KAAL,CAAWC,YAAX,CAAwBH,MAAxB;MACAI,OAAO,CAACC,GAAR,CAAYL,MAAZ;MACAC,MAAM,CAACK,SAAP;IACH,CAV4C;EAAA;;EAY7CC,MAAM,GAAG;IACL,MAAM;MAACV,IAAD;MAAMC;IAAN,IAAiB,KAAKF,KAA5B;IACF,oBACF,QAAC,MAAD;MAAQ,aAAa,EAAE;QAAEC,IAAF;QAAQC;MAAR,CAAvB;MACQ,QAAQ,EAAE,KAAKC,QADvB;MAAA,uBAEQ,QAAC,IAAD;QAAA,wBAAM;UAAA,gCACF,QAAC,WAAD;YACI,IAAI,EAAC,MADT;YAEI,IAAI,EAAC,MAFT;YAGI,OAAO,EAAC,wHAHZ;YAII,KAAK,EAAC,wIAJV;YAKI,QAAQ,MALZ,CAMI;YACA;;UAPJ;YAAA;YAAA;YAAA;UAAA,QADE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAN,eAUI;UAAA,kCAAa,QAAC,WAAD;YACT,IAAI,EAAC,KADI;YAET,IAAI,EAAC,QAFI;YAGT,OAAO,EAAC,wFAHC;YAIT,KAAK,EAAC,8FAJG;YAKT,QAAQ,MALC,CAMT;YACA;;UAPS;YAAA;YAAA;YAAA;UAAA,QAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QAVJ,eAmBQ;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBR;MAAA;QAAA;QAAA;QAAA;MAAA;IAFR;MAAA;MAAA;MAAA;IAAA,QADE;EA8BD;;AA5C4C;AA+CjDJ,SAAS,CAACa,SAAV,GAAsB;EACpBL,YAAY,EAAEZ,SAAS,CAACkB;AADJ,CAAtB"},"metadata":{},"sourceType":"module"}