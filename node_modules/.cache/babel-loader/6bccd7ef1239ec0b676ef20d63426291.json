{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-phonebook/src/components/InputForm.js\";\nimport { Component } from 'react';\nimport { InputItem } from \"./inputForm.styled\";\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class InputForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"\",\n      number: \"\"\n    };\n\n    this.onSubmit = (values, action) => {\n      this.props.submitHandle(values);\n      action.resetForm();\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name,\n        number\n      },\n      onSubmit: this.onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(InputItem, {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true // value={ name}\n            // onChange={this.onInput}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(InputItem, {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true // value={ number}\n            // onChange={this.onInput}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n};","map":{"version":3,"names":["Component","InputItem","Formik","Form","PropTypes","InputForm","state","name","number","onSubmit","values","action","props","submitHandle","resetForm","render","propTypes","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-phonebook/src/components/InputForm.js"],"sourcesContent":["import {Component} from 'react';\nimport { InputItem } from \"./inputForm.styled\";\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport class InputForm extends Component {\n    state = {\n        name: \"\",\n        number: \"\"\n    };\n    // onInput = (evt) => {\n    //     evt.preventDefault();\n    //     this.setState({ [evt.currentTarget.name]: evt.currentTarget.value });\n    // }\n\n    onSubmit = (values, action) => {\n        this.props.submitHandle(values);\n        action.resetForm();\n    }\n    render() {\n        const { name, number } = this.state;\n        return (\n            <Formik initialValues={{ name, number }}\n            onSubmit={this.onSubmit}>\n            <Form><label>Name\n                <InputItem\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    // value={ name}\n                    // onChange={this.onInput}\n                /></label>\n                <label>Number<InputItem\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    // value={ number}\n                    // onChange={this.onInput}\n                    /></label>\n                    <button type=\"submit\">Add contact</button>\n                {/* <button type=\"submit\" onClick={evt => {\n                        this.setState({ name: \"\", number: \"\" });\n                        this.props.SubmitHandle(evt, this.state);\n                } }>Add contact</button> */}\n                </Form>\n                </Formik>\n        )\n    }\n}\nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n}"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;EAAA;IAAA;IAAA,KACrCM,KADqC,GAC7B;MACJC,IAAI,EAAE,EADF;MAEJC,MAAM,EAAE;IAFJ,CAD6B;;IAAA,KAUrCC,QAVqC,GAU1B,CAACC,MAAD,EAASC,MAAT,KAAoB;MAC3B,KAAKC,KAAL,CAAWC,YAAX,CAAwBH,MAAxB;MACAC,MAAM,CAACG,SAAP;IACH,CAboC;EAAA;;EAcrCC,MAAM,GAAG;IACL,MAAM;MAAER,IAAF;MAAQC;IAAR,IAAmB,KAAKF,KAA9B;IACA,oBACI,QAAC,MAAD;MAAQ,aAAa,EAAE;QAAEC,IAAF;QAAQC;MAAR,CAAvB;MACA,QAAQ,EAAE,KAAKC,QADf;MAAA,uBAEA,QAAC,IAAD;QAAA,wBAAM;UAAA,gCACF,QAAC,SAAD;YACI,IAAI,EAAC,MADT;YAEI,IAAI,EAAC,MAFT;YAGI,OAAO,EAAC,wHAHZ;YAII,KAAK,EAAC,wIAJV;YAKI,QAAQ,MALZ,CAMI;YACA;;UAPJ;YAAA;YAAA;YAAA;UAAA,QADE;QAAA;UAAA;UAAA;UAAA;QAAA,QAAN,eAUI;UAAA,kCAAa,QAAC,SAAD;YACT,IAAI,EAAC,KADI;YAET,IAAI,EAAC,QAFI;YAGT,OAAO,EAAC,wFAHC;YAIT,KAAK,EAAC,8FAJG;YAKT,QAAQ,MALC,CAMT;YACA;;UAPS;YAAA;YAAA;YAAA;UAAA,QAAb;QAAA;UAAA;UAAA;UAAA;QAAA,QAVJ,eAmBQ;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBR;MAAA;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QADJ;EA8BH;;AA9CoC;AAgDzCJ,SAAS,CAACW,SAAV,GAAsB;EACpBH,YAAY,EAAET,SAAS,CAACa;AADJ,CAAtB"},"metadata":{},"sourceType":"module"}