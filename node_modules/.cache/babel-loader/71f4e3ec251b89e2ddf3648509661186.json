{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { InputForm } from './InputForm/InputForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactLList/ContactList';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\nconst initialContacts = [{\n  id: 'id-1',\n  name: 'Rosie Simpson',\n  number: '459-12-56'\n}, {\n  id: 'id-2',\n  name: 'Hermione Kline',\n  number: '443-89-12'\n}, {\n  id: 'id-3',\n  name: 'Eden Clements',\n  number: '645-17-79'\n}, {\n  id: 'id-4',\n  name: 'Annie Copeland',\n  number: '227-91-26'\n}];\nexport function App() {\n  _s();\n\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  });\n}\n/*export class App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    filter: ''\n  }\n  componentDidMount() { \n    const contactsList = localStorage.getItem('contacts');\n    const list = JSON.parse(contactsList);\n    if (list) { this.setState({ contacts: list }); } return;\n    \n  };\n  componentDidUpdate(prevProps, prevState) { \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n  submitHandle = (evt) => {\n    const phoneName = this.state.contacts.find(el => (el.name.toLowerCase() === evt.name.toLowerCase()));\n    if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n    \n    evt.id = nanoid();\n    this.setState(prev => ({ contacts: [evt, ...prev.contacts] }))\n  }\n  filterChange = (evt) => {\n    evt.preventDefault();\n    this.setState({ filter: evt.currentTarget.value });\n  }\n  onDelete = (id) => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(\n      contact => contact.id !== id)\n    }))\n  }\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const filterToLowCase = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(filterToLowCase)));\n\n    return (\n      <>\n        \n          <h1>Phonebook</h1>\n          <InputForm submitHandle={this.submitHandle}/>\n        \n        \n          <h2>Contact List</h2>\n          <Filter filter={filter} filterChange={this.filterChange}/>\n          {contacts.length ?\n            <ContactList contacts={filteredContacts} onDelete={this.onDelete} /> :\n            <p>No any contacts</p>}\n        \n      </>\n    );\n  };\n}*/\n\n_s(App, \"GQChYT4G3P6Q959Z1pEuILLwCoc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","InputForm","Filter","ContactList","Notiflix","nanoid","initialContacts","id","name","number","App","contacts","setContacts","filter","setFilter","window","localStorage","setItem","JSON","stringify"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-04-phonebook/src/components/App.jsx"],"sourcesContent":["import {useState,useEffect} from 'react';\nimport { InputForm } from './InputForm/InputForm';\nimport { Filter } from './Filter/Filter';\nimport { ContactList } from './ContactLList/ContactList';\nimport Notiflix from 'notiflix';\nimport { nanoid } from 'nanoid';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\n];\nexport function App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  })\n}\n/*export class App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    filter: ''\n  }\n  componentDidMount() { \n    const contactsList = localStorage.getItem('contacts');\n    const list = JSON.parse(contactsList);\n    if (list) { this.setState({ contacts: list }); } return;\n    \n  };\n  componentDidUpdate(prevProps, prevState) { \n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n  submitHandle = (evt) => {\n    const phoneName = this.state.contacts.find(el => (el.name.toLowerCase() === evt.name.toLowerCase()));\n    if (phoneName) return Notiflix.Notify.failure(phoneName.name + \" is already in contacts\");\n    \n    evt.id = nanoid();\n    this.setState(prev => ({ contacts: [evt, ...prev.contacts] }))\n  }\n  filterChange = (evt) => {\n    evt.preventDefault();\n    this.setState({ filter: evt.currentTarget.value });\n  }\n  onDelete = (id) => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(\n      contact => contact.id !== id)\n    }))\n  }\n  \n  render() {\n    const { filter, contacts } = this.state;\n    const filterToLowCase = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(filterToLowCase)));\n\n    return (\n      <>\n        \n          <h1>Phonebook</h1>\n          <InputForm submitHandle={this.submitHandle}/>\n        \n        \n          <h2>Contact List</h2>\n          <Filter filter={filter} filterChange={this.filterChange}/>\n          {contacts.length ?\n            <ContactList contacts={filteredContacts} onDelete={this.onDelete} /> :\n            <p>No any contacts</p>}\n        \n      </>\n    );\n  };\n}*/"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,eAAe,GAAG,CACtB;EAAEC,EAAE,EAAE,MAAN;EAAcC,IAAI,EAAE,eAApB;EAAqCC,MAAM,EAAE;AAA7C,CADsB,EAEtB;EAAEF,EAAE,EAAE,MAAN;EAAcC,IAAI,EAAE,gBAApB;EAAsCC,MAAM,EAAE;AAA9C,CAFsB,EAGtB;EAAEF,EAAE,EAAE,MAAN;EAAcC,IAAI,EAAE,eAApB;EAAqCC,MAAM,EAAE;AAA7C,CAHsB,EAItB;EAAEF,EAAE,EAAE,MAAN;EAAcC,IAAI,EAAE,gBAApB;EAAsCC,MAAM,EAAE;AAA9C,CAJsB,CAAxB;AAMA,OAAO,SAASC,GAAT,GAAe;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACO,eAAD,CAAxC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACde,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCC,IAAI,CAACC,SAAL,CAAeR,QAAf,CAAxC;EACD,CAFQ,CAAT;AAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GApEgBD,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}