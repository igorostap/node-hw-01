{"ast":null,"code":"import axios from 'axios';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nconst axiosBaseQuery = function () {\n  let {\n    baseUrl\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    baseUrl: ''\n  };\n  return async _ref => {\n    let {\n      url,\n      method,\n      data,\n      params\n    } = _ref;\n\n    try {\n      const result = await axios({\n        url: baseUrl + url,\n        method,\n        data,\n        params\n      });\n      return {\n        data: result.data\n      };\n    } catch (axiosError) {\n      var _err$response, _err$response2;\n\n      let err = axiosError;\n      return {\n        error: {\n          status: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status,\n          data: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message\n        }\n      };\n    }\n  };\n};\n\nexport const contactsApi = createApi({\n  reducerPath: 'contacts',\n  baseQuery: axiosBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com/'\n  }),\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => ({\n        url: 'contacts',\n        method: 'GET'\n      }),\n      keepUnusedDataFor: 3,\n      providesTags: ['contacts']\n    }),\n    addContact: builder.mutation({\n      query: data => ({\n        url: 'contacts',\n        method: 'POST',\n        data\n      }),\n      invalidatesTags: ['contacts']\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `contacts/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['contacts']\n    })\n  })\n});\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n  useGetContactByIdQuery\n} = contactsApi;","map":{"version":3,"names":["axios","createApi","axiosBaseQuery","baseUrl","url","method","data","params","result","axiosError","err","error","status","response","message","contactsApi","reducerPath","baseQuery","endpoints","builder","getContacts","query","keepUnusedDataFor","providesTags","addContact","mutation","invalidatesTags","deleteContact","id","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","useGetContactByIdQuery"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-08-phonebook/src/Redux/ContactsSlice.js"],"sourcesContent":["import axios from 'axios';\nimport { createApi } from '@reduxjs/toolkit/query/react';\n\nconst axiosBaseQuery =\n  ({ baseUrl } = { baseUrl: '' }) =>\n  async ({ url, method, data, params }) => {\n    try {\n      const result = await axios({ url: baseUrl + url, method, data, params });\n      return { data: result.data };\n    } catch (axiosError) {\n      let err = axiosError;\n      return {\n        error: {\n          status: err.response?.status,\n          data: err.response?.data || err.message,\n        },\n      };\n    }\n  };\n\nexport const contactsApi = createApi({\n  reducerPath: 'contacts',\n  baseQuery: axiosBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com/',\n  }),\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => ({ url: 'contacts', method: 'GET' }),\n      keepUnusedDataFor: 3,\n      providesTags: ['contacts'],\n    }),\n    addContact: builder.mutation({\n      query: data => ({\n        url: 'contacts',\n        method: 'POST',\n        data,\n      }),\n      invalidatesTags: ['contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n  useGetContactByIdQuery,\n} = contactsApi;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,MAAMC,cAAc,GAClB;EAAA,IAAC;IAAEC;EAAF,CAAD,uEAAe;IAAEA,OAAO,EAAE;EAAX,CAAf;EAAA,OACA,cAAyC;IAAA,IAAlC;MAAEC,GAAF;MAAOC,MAAP;MAAeC,IAAf;MAAqBC;IAArB,CAAkC;;IACvC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMR,KAAK,CAAC;QAAEI,GAAG,EAAED,OAAO,GAAGC,GAAjB;QAAsBC,MAAtB;QAA8BC,IAA9B;QAAoCC;MAApC,CAAD,CAA1B;MACA,OAAO;QAAED,IAAI,EAAEE,MAAM,CAACF;MAAf,CAAP;IACD,CAHD,CAGE,OAAOG,UAAP,EAAmB;MAAA;;MACnB,IAAIC,GAAG,GAAGD,UAAV;MACA,OAAO;QACLE,KAAK,EAAE;UACLC,MAAM,mBAAEF,GAAG,CAACG,QAAN,kDAAE,cAAcD,MADjB;UAELN,IAAI,EAAE,mBAAAI,GAAG,CAACG,QAAJ,kEAAcP,IAAd,KAAsBI,GAAG,CAACI;QAF3B;MADF,CAAP;IAMD;EACF,CAdD;AAAA,CADF;;AAiBA,OAAO,MAAMC,WAAW,GAAGd,SAAS,CAAC;EACnCe,WAAW,EAAE,UADsB;EAEnCC,SAAS,EAAEf,cAAc,CAAC;IACxBC,OAAO,EAAE;EADe,CAAD,CAFU;EAKnCe,SAAS,EAAEC,OAAO,KAAK;IACrBC,WAAW,EAAED,OAAO,CAACE,KAAR,CAAc;MACzBA,KAAK,EAAE,OAAO;QAAEjB,GAAG,EAAE,UAAP;QAAmBC,MAAM,EAAE;MAA3B,CAAP,CADkB;MAEzBiB,iBAAiB,EAAE,CAFM;MAGzBC,YAAY,EAAE,CAAC,UAAD;IAHW,CAAd,CADQ;IAMrBC,UAAU,EAAEL,OAAO,CAACM,QAAR,CAAiB;MAC3BJ,KAAK,EAAEf,IAAI,KAAK;QACdF,GAAG,EAAE,UADS;QAEdC,MAAM,EAAE,MAFM;QAGdC;MAHc,CAAL,CADgB;MAM3BoB,eAAe,EAAE,CAAC,UAAD;IANU,CAAjB,CANS;IAcrBC,aAAa,EAAER,OAAO,CAACM,QAAR,CAAiB;MAC9BJ,KAAK,EAAEO,EAAE,KAAK;QACZxB,GAAG,EAAG,YAAWwB,EAAG,EADR;QAEZvB,MAAM,EAAE;MAFI,CAAL,CADqB;MAK9BqB,eAAe,EAAE,CAAC,UAAD;IALa,CAAjB;EAdM,CAAL;AALiB,CAAD,CAA7B;AA6BP,OAAO,MAAM;EACXG,mBADW;EAEXC,qBAFW;EAGXC,wBAHW;EAIXC;AAJW,IAKTjB,WALG"},"metadata":{},"sourceType":"module"}