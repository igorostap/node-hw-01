{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { contactsApi } from './ContactsSlice';\nimport { filterSlice } from './filterSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nconst middleware = [...getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n  }\n})];\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterSlice.reducer\n  },\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware]\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","contactsApi","filterSlice","setupListeners","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","authPersistConfig","key","whitelist","store","reducer","reducerPath","filter","dispatch"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-08-phonebook/src/Redux/Store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { contactsApi } from './ContactsSlice';\nimport { filterSlice } from './filterSlice';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterSlice.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\nsetupListeners(store.dispatch);\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,MAAMC,UAAU,GAAG,CACjB,GAAGC,oBAAoB,CAAC;EACtBC,iBAAiB,EAAE;IACjBC,cAAc,EAAE,CAACX,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;EADC;AADG,CAAD,CADN,CAAnB;AAQA,MAAMO,iBAAiB,GAAG;EACxBC,GAAG,EAAE,MADmB;EAExBP,OAFwB;EAGxBQ,SAAS,EAAE,CAAC,OAAD;AAHa,CAA1B;AAKA,OAAO,MAAMC,KAAK,GAAGrB,cAAc,CAAC;EAClCsB,OAAO,EAAE;IACP,CAACrB,WAAW,CAACsB,WAAb,GAA2BtB,WAAW,CAACqB,OADhC;IAEPE,MAAM,EAAEtB,WAAW,CAACoB;EAFb,CADyB;EAKlCR,UAAU,EAAEC,oBAAoB,IAAI,CAClC,GAAGA,oBAAoB,EADW,EAElCd,WAAW,CAACa,UAFsB;AALF,CAAD,CAA5B;AAUPX,cAAc,CAACkB,KAAK,CAACI,QAAP,CAAd"},"metadata":{},"sourceType":"module"}