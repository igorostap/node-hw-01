{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-06-phonebook/src/components/InputForm/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { InputItem } from \"./inputForm.styled\";\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../Redux/contactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputForm(_ref) {\n  _s();\n\n  let {\n    submitHandle\n  } = _ref;\n  const [name] = useState('');\n  const [number] = useState('');\n\n  const onSubmit = (values, action) => {\n    const equalName = contacts.find(el => el.name.toLowerCase() === values.name.toLowerCase());\n    if (equalName) return alert(equalName.name + \" is already in contacts\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name,\n      number\n    },\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(InputItem, {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(InputItem, {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}\n\n_s(InputForm, \"CAGVphiFy8Rx/yOPpIJ0rOQzOPg=\");\n\n_c = InputForm;\nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["useState","InputItem","Formik","Form","PropTypes","useSelector","useDispatch","addContact","InputForm","submitHandle","name","number","onSubmit","values","action","equalName","contacts","find","el","toLowerCase","alert","propTypes","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-06-phonebook/src/components/InputForm/InputForm.js"],"sourcesContent":["import {useState} from 'react';\nimport { InputItem } from \"./inputForm.styled\";\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../Redux/contactsSlice';\n\nexport function InputForm({submitHandle}) {\n    const [name] = useState('');\n    const [number] = useState('');\n\n    const onSubmit = (values, action) => {\n        const equalName = contacts.find(el => (el.name.toLowerCase() === values.name.toLowerCase()));\n        if (equalName) return alert(equalName.name + \" is already in contacts\");\n    };\n    return (\n            <Formik initialValues={{ name, number }}\n            onSubmit={onSubmit}>\n            <Form><label>Name\n                <InputItem\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                   \n                /></label>\n                <label>Number<InputItem\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                   \n                    /></label>\n                    <button type=\"submit\">Add contact</button>\n                \n                </Form>\n                </Formik>\n        )\n    }\n\nInputForm.propTypes = {\n  submitHandle: PropTypes.func\n}\n"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,OAAO,SAASC,SAAT,OAAmC;EAAA;;EAAA,IAAhB;IAACC;EAAD,CAAgB;EACtC,MAAM,CAACC,IAAD,IAASV,QAAQ,CAAC,EAAD,CAAvB;EACA,MAAM,CAACW,MAAD,IAAWX,QAAQ,CAAC,EAAD,CAAzB;;EAEA,MAAMY,QAAQ,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;IACjC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,EAAE,IAAKA,EAAE,CAACR,IAAH,CAAQS,WAAR,OAA0BN,MAAM,CAACH,IAAP,CAAYS,WAAZ,EAA/C,CAAlB;IACA,IAAIJ,SAAJ,EAAe,OAAOK,KAAK,CAACL,SAAS,CAACL,IAAV,GAAiB,yBAAlB,CAAZ;EAClB,CAHD;;EAIA,oBACQ,QAAC,MAAD;IAAQ,aAAa,EAAE;MAAEA,IAAF;MAAQC;IAAR,CAAvB;IACA,QAAQ,EAAEC,QADV;IAAA,uBAEA,QAAC,IAAD;MAAA,wBAAM;QAAA,gCACF,QAAC,SAAD;UACI,IAAI,EAAC,MADT;UAEI,IAAI,EAAC,MAFT;UAGI,OAAO,EAAC,wHAHZ;UAII,KAAK,EAAC,wIAJV;UAKI,QAAQ;QALZ;UAAA;UAAA;UAAA;QAAA,QADE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAN,eASI;QAAA,kCAAa,QAAC,SAAD;UACT,IAAI,EAAC,KADI;UAET,IAAI,EAAC,QAFI;UAGT,OAAO,EAAC,wFAHC;UAIT,KAAK,EAAC,8FAJG;UAKT,QAAQ;QALC;UAAA;UAAA;UAAA;QAAA,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBQ;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBR;IAAA;MAAA;MAAA;MAAA;IAAA;EAFA;IAAA;IAAA;IAAA;EAAA,QADR;AAyBC;;GAjCWJ,S;;KAAAA,S;AAmChBA,SAAS,CAACa,SAAV,GAAsB;EACpBZ,YAAY,EAAEL,SAAS,CAACkB;AADJ,CAAtB"},"metadata":{},"sourceType":"module"}