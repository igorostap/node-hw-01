{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-phonebook/src/components/App.jsx\";\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n\n    this.inputValue = e => {\n      console.log(e.currentTarget.value);\n      this.setState({\n        name: e.currentTarget.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      name\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: name,\n          onChange: this.inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["Component","App","state","contacts","name","inputValue","e","console","log","currentTarget","value","setState","render"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-phonebook/src/components/App.jsx"],"sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n  inputValue=e=> {\n    \n    console.log(e.currentTarget.value)\n    this.setState({ name: e.currentTarget.value });\n  }\n  render() {\n    const { contacts, name } = this.state;\n    return (\n      <div>\n        <form><h1>Name</h1>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={this.inputValue}\n          />\n        </form>\n        <button type='submit'>Add contacts</button>\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;EAAA;IAAA;IAAA,KACjCE,KADiC,GACzB;MACNC,QAAQ,EAAE,EADJ;MAENC,IAAI,EAAE;IAFA,CADyB;;IAAA,KAKjCC,UALiC,GAKtBC,CAAC,IAAG;MAEbC,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,aAAF,CAAgBC,KAA5B;MACA,KAAKC,QAAL,CAAc;QAAEP,IAAI,EAAEE,CAAC,CAACG,aAAF,CAAgBC;MAAxB,CAAd;IACD,CATgC;EAAA;;EAUjCE,MAAM,GAAG;IACP,MAAM;MAAET,QAAF;MAAYC;IAAZ,IAAqB,KAAKF,KAAhC;IACA,oBACE;MAAA,wBACE;QAAA,wBAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAN,eACE;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,OAAO,EAAC,wHAHV;UAIE,KAAK,EAAC,wIAJR;UAKE,QAAQ,MALV;UAME,KAAK,EAAEE,IANT;UAOE,QAAQ,EAAE,KAAKC;QAPjB;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAYE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD;;AA5BgC"},"metadata":{},"sourceType":"module"}