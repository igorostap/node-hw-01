{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-07-phonebook/src/components/InputForm/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport { InputItem } from './inputForm.styled';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAddContactMutation } from '../../Redux/ContactsSlice';\nimport { nanoid } from 'nanoid';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputForm() {\n  _s();\n\n  const [addContact] = useAddContactMutation();\n\n  const handleAddContact = async values => {\n    try {\n      await addContact(values);\n      toast.success('Contact added');\n    } catch (error) {\n      toast.error('Error');\n      console.log(error);\n    }\n  };\n\n  const onSubmit = (values, action) => {\n    const handleSubmit = async (values, actions) => {\n      await handleAddContact(values);\n      actions.resetForm();\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(InputItem, {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number\", /*#__PURE__*/_jsxDEV(InputItem, {\n          type: \"tel\",\n          name: \"number\",\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputForm, \"KofqVZZjBLaC9wJ3jpFIcPMhyME=\", false, function () {\n  return [useAddContactMutation];\n});\n\n_c = InputForm;\nInputForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["InputItem","Formik","Form","PropTypes","useSelector","useDispatch","useAddContactMutation","nanoid","toast","InputForm","addContact","handleAddContact","values","success","error","console","log","onSubmit","action","handleSubmit","actions","resetForm","name","number","propTypes","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-07-phonebook/src/components/InputForm/InputForm.js"],"sourcesContent":["import { InputItem } from './inputForm.styled';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAddContactMutation } from '../../Redux/ContactsSlice';\nimport { nanoid } from 'nanoid';\nimport toast from 'react-hot-toast';\n\nexport function InputForm() {\n  const [addContact] = useAddContactMutation();\n\n  const handleAddContact = async values => {\n    try {\n      await addContact(values);\n      toast.success('Contact added');\n    } catch (error) {\n      toast.error('Error');\n      console.log(error);\n    }\n  };\n\n  const onSubmit = (values, action) => {\n    const handleSubmit = async (values, actions) => {\n      await handleAddContact(values);\n\n      actions.resetForm();\n    };\n  };\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={onSubmit}>\n      <Form>\n        <label>\n          Name\n          <InputItem\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <InputItem\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n}\n\nInputForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,2BAAtC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,OAAO,SAASC,SAAT,GAAqB;EAAA;;EAC1B,MAAM,CAACC,UAAD,IAAeJ,qBAAqB,EAA1C;;EAEA,MAAMK,gBAAgB,GAAG,MAAMC,MAAN,IAAgB;IACvC,IAAI;MACF,MAAMF,UAAU,CAACE,MAAD,CAAhB;MACAJ,KAAK,CAACK,OAAN,CAAc,eAAd;IACD,CAHD,CAGE,OAAOC,KAAP,EAAc;MACdN,KAAK,CAACM,KAAN,CAAY,OAAZ;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CARD;;EAUA,MAAMG,QAAQ,GAAG,CAACL,MAAD,EAASM,MAAT,KAAoB;IACnC,MAAMC,YAAY,GAAG,OAAOP,MAAP,EAAeQ,OAAf,KAA2B;MAC9C,MAAMT,gBAAgB,CAACC,MAAD,CAAtB;MAEAQ,OAAO,CAACC,SAAR;IACD,CAJD;EAKD,CAND;;EAOA,oBACE,QAAC,MAAD;IAAQ,aAAa,EAAE;MAAEC,IAAI,EAAE,EAAR;MAAYC,MAAM,EAAE;IAApB,CAAvB;IAAiD,QAAQ,EAAEN,QAA3D;IAAA,uBACE,QAAC,IAAD;MAAA,wBACE;QAAA,gCAEE,QAAC,SAAD;UACE,IAAI,EAAC,MADP;UAEE,IAAI,EAAC,MAFP;UAGE,OAAO,EAAC,wHAHV;UAIE,KAAK,EAAC,wIAJR;UAKE,QAAQ;QALV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAA,kCAEE,QAAC,SAAD;UACE,IAAI,EAAC,KADP;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAC,wFAHV;UAIE,KAAK,EAAC,8FAJR;UAKE,QAAQ;QALV;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAqBE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA2BD;;GA/CeR,S;UACOH,qB;;;KADPG,S;AAiDhBA,SAAS,CAACe,SAAV,GAAsB;EACpBP,QAAQ,EAAEd,SAAS,CAACsB;AADA,CAAtB"},"metadata":{},"sourceType":"module"}