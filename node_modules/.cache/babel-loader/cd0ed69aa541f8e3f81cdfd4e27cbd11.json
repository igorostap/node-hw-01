{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-08-phonebook/src/components/InputForm/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport { InputFormBox, InputItem } from './inputForm.styled';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from '../../Redux/ContactsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputForm(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [addContact] = useAddContactMutation();\n\n  const onSubmit = (values, action) => {\n    const equalName = data.find(el => el.name.toLowerCase() === values.name.toLowerCase());\n    if (equalName) return alert(equalName.name + ' is already in contacts');\n    addContact(values);\n    action.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputFormBox, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        phone: ''\n      },\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name\", /*#__PURE__*/_jsxDEV(InputItem, {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Number\", /*#__PURE__*/_jsxDEV(InputItem, {\n            type: \"tel\",\n            name: \"phone\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputForm, \"KofqVZZjBLaC9wJ3jpFIcPMhyME=\", false, function () {\n  return [useAddContactMutation];\n});\n\n_c = InputForm;\nInputForm.propTypes = {\n  onSubmit: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["InputFormBox","InputItem","Formik","Form","PropTypes","useAddContactMutation","InputForm","data","addContact","onSubmit","values","action","equalName","find","el","name","toLowerCase","alert","resetForm","phone","propTypes","func"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-08-phonebook/src/components/InputForm/InputForm.js"],"sourcesContent":["import { InputFormBox, InputItem } from './inputForm.styled';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport { useAddContactMutation } from '../../Redux/ContactsSlice';\n\nexport function InputForm({ data }) {\n  const [addContact] = useAddContactMutation();\n\n  const onSubmit = (values, action) => {\n    const equalName = data.find(\n      el => el.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (equalName) return alert(equalName.name + ' is already in contacts');\n\n    addContact(values);\n\n    action.resetForm();\n  };\n  return (\n    <InputFormBox>\n      <Formik initialValues={{ name: '', phone: '' }} onSubmit={onSubmit}>\n        <Form>\n          <label>\n            Name\n            <InputItem\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label>\n            Number\n            <InputItem\n              type=\"tel\"\n              name=\"phone\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </Form>\n      </Formik>\n    </InputFormBox>\n  );\n}\n\nInputForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"mappings":";;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,QAAwC,oBAAxC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,qBAAT,QAAsC,2BAAtC;;AAEA,OAAO,SAASC,SAAT,OAA6B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EAClC,MAAM,CAACC,UAAD,IAAeH,qBAAqB,EAA1C;;EAEA,MAAMI,QAAQ,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;IACnC,MAAMC,SAAS,GAAGL,IAAI,CAACM,IAAL,CAChBC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,WAAR,OAA0BN,MAAM,CAACK,IAAP,CAAYC,WAAZ,EADhB,CAAlB;IAGA,IAAIJ,SAAJ,EAAe,OAAOK,KAAK,CAACL,SAAS,CAACG,IAAV,GAAiB,yBAAlB,CAAZ;IAEfP,UAAU,CAACE,MAAD,CAAV;IAEAC,MAAM,CAACO,SAAP;EACD,CATD;;EAUA,oBACE,QAAC,YAAD;IAAA,uBACE,QAAC,MAAD;MAAQ,aAAa,EAAE;QAAEH,IAAI,EAAE,EAAR;QAAYI,KAAK,EAAE;MAAnB,CAAvB;MAAgD,QAAQ,EAAEV,QAA1D;MAAA,uBACE,QAAC,IAAD;QAAA,wBACE;UAAA,gCAEE,QAAC,SAAD;YACE,IAAI,EAAC,MADP;YAEE,IAAI,EAAC,MAFP;YAGE,OAAO,EAAC,wHAHV;YAIE,KAAK,EAAC,wIAJR;YAKE,QAAQ;UALV;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAWE;UAAA,kCAEE,QAAC,SAAD;YACE,IAAI,EAAC,KADP;YAEE,IAAI,EAAC,OAFP;YAGE,OAAO,EAAC,wFAHV;YAIE,KAAK,EAAC,8FAJR;YAKE,QAAQ;UALV;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF,eAqBE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QArBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD;;GA1CeH,S;UACOD,qB;;;KADPC,S;AA4ChBA,SAAS,CAACc,SAAV,GAAsB;EACpBX,QAAQ,EAAEL,SAAS,CAACiB;AADA,CAAtB"},"metadata":{},"sourceType":"module"}