{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onFeedbackHandle = evt => {\n      const stateName = evt.currentTarget.name;\n      this.setState(prev => ({\n        [stateName]: prev[stateName] + 1\n      }));\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n\n    this.btns = () => Object.keys(this.state);\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: this.btns(),\n          onLeaveFeedback: this.onFeedbackHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: this.countTotalFeedback() ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: this.countTotalFeedback,\n          positiveFeedbackPerc: this.countPositiveFeedbackPercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n;","map":{"version":3,"names":["Component","Statistics","FeedbackOptions","Section","Notification","App","state","good","neutral","bad","onFeedbackHandle","evt","stateName","currentTarget","name","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","btns","Object","keys","render"],"sources":["/home/ihor/Рабочий стол/goit-react-hw-02-feedback/src/components/App.jsx"],"sourcesContent":["import { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\nexport class App extends Component  {\n   state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    };\n    \n    onFeedbackHandle = (evt) => {\n    const stateName = evt.currentTarget.name;\n    this.setState(prev => ({ [stateName]: prev[stateName] + 1 }));\n  }\n    countTotalFeedback = () => {\n        return (this.state.good + this.state.neutral + this.state.bad);\n    };\n    countPositiveFeedbackPercentage = () => (Math.round(this.state.good / this.countTotalFeedback() * 100));\n    \nbtns = () => Object.keys(this.state);\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n<FeedbackOptions\n        options={this.btns() }\n        onLeaveFeedback={this.onFeedbackHandle}/>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {this.countTotalFeedback() ?\n            <Statistics good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positiveFeedbackPerc={this.countPositiveFeedbackPercentage} /> :\n              <Notification message=\"There is no feedback\"/> }\n      </Section>\n      \n      \n    </div>\n    \n  );\n}\n  \n};\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA6B;EAAA;IAAA;IAAA,KACjCM,KADiC,GACzB;MACHC,IAAI,EAAE,CADH;MAEHC,OAAO,EAAE,CAFN;MAGHC,GAAG,EAAE;IAHF,CADyB;;IAAA,KAOhCC,gBAPgC,GAOZC,GAAD,IAAS;MAC5B,MAAMC,SAAS,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,IAApC;MACA,KAAKC,QAAL,CAAcC,IAAI,KAAK;QAAE,CAACJ,SAAD,GAAaI,IAAI,CAACJ,SAAD,CAAJ,GAAkB;MAAjC,CAAL,CAAlB;IACD,CAViC;;IAAA,KAWhCK,kBAXgC,GAWX,MAAM;MACvB,OAAQ,KAAKX,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAA1D;IACH,CAb+B;;IAAA,KAchCS,+BAdgC,GAcE,MAAOC,IAAI,CAACC,KAAL,CAAW,KAAKd,KAAL,CAAWC,IAAX,GAAkB,KAAKU,kBAAL,EAAlB,GAA8C,GAAzD,CAdT;;IAAA,KAgBpCI,IAhBoC,GAgB7B,MAAMC,MAAM,CAACC,IAAP,CAAY,KAAKjB,KAAjB,CAhBuB;EAAA;;EAmBlCkB,MAAM,GAAG;IACP,MAAM;MAAEjB,IAAF;MAAQC,OAAR;MAAiBC;IAAjB,IAAyB,KAAKH,KAApC;IACF,oBACE;MAAA,wBACE,QAAC,OAAD;QAAS,KAAK,EAAC,uBAAf;QAAA,uBACN,QAAC,eAAD;UACQ,OAAO,EAAE,KAAKe,IAAL,EADjB;UAEQ,eAAe,EAAE,KAAKX;QAF9B;UAAA;UAAA;UAAA;QAAA;MADM;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,OAAD;QAAS,KAAK,EAAC,YAAf;QAAA,UACG,KAAKO,kBAAL,kBACG,QAAC,UAAD;UAAY,IAAI,EAAEV,IAAlB;UACE,OAAO,EAAEC,OADX;UAEE,GAAG,EAAEC,GAFP;UAGE,KAAK,EAAE,KAAKQ,kBAHd;UAIE,oBAAoB,EAAE,KAAKC;QAJ7B;UAAA;UAAA;UAAA;QAAA,QADH,gBAMK,QAAC,YAAD;UAAc,OAAO,EAAC;QAAtB;UAAA;UAAA;UAAA;QAAA;MAPR;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAsBD;;AA3CmC;AA6CnC"},"metadata":{},"sourceType":"module"}